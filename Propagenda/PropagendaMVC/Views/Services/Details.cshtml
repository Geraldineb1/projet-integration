@model PropagendaMVC.Models.ServiceVM

@{
    ViewData["Title"] = "Details";
}

@*
<div class="row">
    <h1>@Html.DisplayFor(model => model.Title)</h1> proposé par @Html.DisplayFor(model => model.Provider.Name) 
    <h2>@Html.DisplayFor(model => model.Servicetype.Label)</h2>
    <img src="/images/@Html.DisplayFor(model => model.Image)"/>
    <hr />
    <p>@Html.DisplayFor(model => model.Description)</p>
    <p>@Html.DisplayFor(model => model.Price)/heure</p>
    <p>@Html.DisplayFor(model => model.LocationArea) / @Html.DisplayFor(model => model.LocationAddress)</p>
</div>

@if (User.Identity.IsAuthenticated)
{
    <div class="row">
        <div class="col">
            @Html.ActionLink("FAIRE UNE DEMANDE", "Create", "ServiceReservations", new {  id = Model.Id  })
        </div>
    </div>
}


<div>
    @Html.ActionLink("Modifier", "Edit", "Services", new {  id = Model.Id  }) |
    <a asp-action="Index">Vers les services</a>
    <br />
    <br />
    <button onclick="history.go(-1)">Retour</button>
</div>






@model PropagendaMVC.Models.ProviderWithServicesVM;
@using System.Security.Claims;

@{
    ViewData["Title"] = "Details";
    var currentuserID = (User.Identity.IsAuthenticated)?((ClaimsIdentity)User.Identity).Claims.FirstOrDefault(x => x.Type == "uid").Value:"";
}*@

<div class="container">
    <h1 >
               Détails de la prestation
        </h1>
<div class="container-xxl">
    <div class="profil py-5">
        
        
        <div class="card2 card-profil" style="border-radius: 18px;">
    <div class="card-flex-stretch" style="display: block;">
        <div class="card-img">
            <img style="width: 100%; height: 587px;" src="/images/@Html.DisplayFor(model => model.Image)"/>
        </div>

        <div class="card-body" style="text-align: center;">
             <div class="card-body" style="padding: 100px 78px;text-align: center;">
                    <div class="card-title" style="display: flex;justify-content: end;">

        <button class="btn btn-default btn-lg" style="width: max-content;" > @Html.ActionLink("Modifier", "Edit", "Services", new {  id = Model.Id  },new { @class = "myLink"})</button>
                                </div>
            <div class="card-title" style="text-transform: uppercase;"> <h2>@Html.DisplayFor(model => model.Servicetype.Label)</h2></div>
            <h1>@Html.DisplayFor(model => model.Title)</h1> proposé par @Html.DisplayFor(model => model.Provider.Name) 
            <p class="lead2 mb-4">@Html.DisplayFor(model => model.Description)</p>
            <p class="lead2 mb-4">@Html.DisplayFor(model => model.Price)/heure</p>
            <p class="lead2 mb-4">@Html.DisplayFor(model => model.LocationArea) / @Html.DisplayFor(model => model.LocationAddress)</p>

            <div class="m-t-3 justify-content-sm-center">
                @*<button class="btn btn-default btn-lg" >@Html.ActionLink("Modifier", "Edit", "Services", new {  id = Model.Id  },new { @class = "myLink"})</button>*@
              @if (User.Identity.IsAuthenticated)
{
                <button class="btn btn-default btn-lg" ><a style="color: #fff;text-decoration: none;">@Html.ActionLink("FAIRE UNE DEMANDE", "Create", "ServiceReservations", new {  id = Model.Id  },new { @class = "myLink"})</a>  </button>
}
            </div>
        </div>
    </div>
    </div>
</div>
     

</div>

  <div class="py-3  text-center">
    <div class="col-lg-6 mx-auto">

      <div class="d-grid gap-2 d-sm-flex justify-content-sm-center">
        <button type="button" class="btn btn_retour btn-primary btn-lg px-4 gap-3" onclick="history.go(-1)" style="background-color: #a4a9ae;">Retour</button>
        <button type="button" class="btn btn_retour btn-primary btn-lg px-4 gap-3" style="background-color: #a4a9ae;"><a style="color: #fff;text-decoration: none;" asp-action="Index">Vers les prestataires</a></button>
      </div>
    </div>
    </div>
